# Default values for hiro-monitoring.
# This is a YAML-formatted file.
# Declare variables to be passed into your templates.

replicaCount: 1

# Custom prometheus values
prometheus:
  # Accessed by InfluxDB.

  server:
    remoteWrite:
      - url: "http://monitoring-stack-influxdb.monitoring:8086/api/v1/prom/write?db=prometheus&u=admin&p=admin"

    global:
      ## How frequently to scrape targets by default
      ##
      scrape_interval: 1m
      ## How long until a scrape request times out
      ##
      scrape_timeout: 11s
      ## How frequently to evaluate rules
      ##
      evaluation_interval: 1m
  kube-state-metrics:
    ## If false, kube-state-metrics sub-chart will not be installed
    ##
    enabled: true

  alertmanager:
    ## If false, alertmanager will not be installed
    enabled: true

  extraScrapeConfigs: |
    - job_name: 'node-exporter'
      kubernetes_sd_configs:
        - role: endpoints
      relabel_configs:
      - source_labels: [__meta_kubernetes_endpoints_name]
        regex: 'node-exporter'
        action: keep
    - job_name: 'idrac-exporter'
      params:
        "target": ["10.14.2.7"]
      kubernetes_sd_configs:
        - role: endpoints
      relabel_configs:
      - source_labels: [__meta_kubernetes_endpoints_name]
        regex: 'idrac-exporter'
        action: keep
    - job_name: 'snmp-exporter-prometheus-snmp-exporter'
      kubernetes_sd_configs:
        - role: endpoints
      relabel_configs:
      - source_labels: [__meta_kubernetes_endpoints_name]
        regex: 'snmp-exporter-prometheus-snmp-exporter'
        action: keep
    - job_name: 'kepler'
      kubernetes_sd_configs:
        - role: endpoints
      relabel_configs:
      - source_labels: [__meta_kubernetes_endpoints_name]
        regex: 'kepler'
        action: keep

grafana:
  datasources:
    datasources.yaml:
      apiVersion: 1
      datasources:
        - name: Prometheus
          type: prometheus
          # this is clusterIP address of monitoring-stack-prometheus-server
          url: http://monitoring-stack-prometheus-server:80
          access: proxy
          isDefault: true
        - name: Loki
          type: loki
          # this is clusterIP address of monitoring-stack-prometheus-server
          url: http://{{ tpl .Release.Name . }}-loki:3100
          access: proxy
        - name: InfluxDB
          type: influxdb
          url: http://{{ tpl .Release.Name . }}-influxdb:8086
          access: proxy
          user: admin                    
          secureJsonData:
            password: admin
          jsonData:
            dbName: prometheus
          

influxdb:
  image:
    repository: "influxdb"
    tag: "1.8" # InfluxDB 2.0 is not directly supported with prometheus
    pullPolicy: IfNotPresent

  env:
    - name: INFLUXDB_DB
      value: "prometheus"
    - name: INFLUXDB_ADMIN_USER
      value: "admin"
    - name: INFLUXDB_ADMIN_PASSWORD
      value: "admin"

fluentd-sidecar-injector:
  useCertManager: false
  sidecarInjector:
    fluentbit:
      aggregatorHost:	my-fluentd-aggregator.logging.svc
      aggregatorPort:	24224
      applicationLogDir:	/var/opt/app/logs
      dockerImage:	ghcr.io/h3poteto/fluentd-sidecar-injector:latest
      tagPrefix:	my-log

loki-stack:
  fluent-bit:
    enabled: true
  promtail:
    enabled: false

kepler:
  image:
    tag: latest

prometheus-snmp-exporter:

prometheus-node-exporter: